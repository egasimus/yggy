#!/usr/bin/env node

const {sync:glob} = require('glob')
const {relative, parse, sep, resolve} = require('path')
const {statSync} = require('fs')

const methodNames = new Set([ 'GET', 'POST' ])

module.exports = function buildRouteMap (dir) {
  const data = []
  const pattern = `${dir}/**/*`
  for (let path of glob(pattern)) {
    const relPath = relative(dir, path)
    const stats   = statSync(path)
    if (stats.isFile()) {
      let { dir, base, name, ext } = parse(relPath)
      dir = `/` + dir.split(sep).map(x=>x.replace(/^_(.+)_$/, ':$1')).join('/')
      if (methodNames.has(name)) data.push([ name, dir, path ])
    }
  }
  return data
}

if (require.main === module) {
  for (let [method, route, handler] of module.exports(process.argv[2] || __dirname)) {
    console.log(`${method}\t${route}\t${handler}`)
  }
}
